Celf ver 2.9. Copyright (C) 2011
[reading combat.clf]
nat: type.
z: nat.
s: nat -> nat.
sub: nat -> nat -> nat -> type.
sub/z1: Pi N: nat. sub z N z.
sub/z2: Pi N: nat. sub N z N.
sub/s: Pi M: nat. Pi N: nat. Pi P: nat. sub N M P -> sub (s !N) (s !M) P.
plus: nat -> nat -> nat -> type.
plus/z: Pi N: nat. plus z N N.
plus/s: Pi M: nat. Pi N: nat. Pi P: nat. plus N M P -> plus (s !N) M (s !P).
two: nat = s !(s !z).
three: nat = s !(s !(s !z)).
six: nat = s !(s !(s !(s !(s !(s !z))))).
ten: nat = s !(s !(s !(s !(s !(s !(s !(s !(s !(s !z))))))))).
Query (*, *, *, 1) plus (s !(s !(s !(s !(s !(s !(s !(s !(s !(s !z)))))))))) #X (s !(s !(s !z))).
Query (*, *, *, 1) plus (s !(s !(s !z))) #X (s !(s !(s !(s !(s !(s !(s !(s !(s !(s !z)))))))))).
Solution: plus/s !(plus/s !(plus/s !plus/z))
 #X = s !(s !(s !(s !(s !(s !(s !z))))))
Query (*, *, *, 1) sub (s !(s !(s !(s !(s !(s !(s !(s !(s !(s !z)))))))))) (s !(s !(s !z))) #X.
Solution: sub/s !(sub/s !(sub/s !sub/z2))
 #X = s !(s !(s !(s !(s !(s !(s !z))))))
Query (*, *, *, 1) sub (s !(s !(s !z))) (s !(s !(s !(s !(s !(s !(s !(s !(s !(s !z)))))))))) #X.
Solution: sub/s !(sub/s !(sub/s !sub/z1))
 #X = z
starting_hp: nat = s !(s !(s !(s !(s !(s !(s !(s !(s !(s !z))))))))).
pc: type.
player1: pc.
player2: pc.
opp: pc -> pc -> type.
-: opp player1 player2.
-: opp player2 player1.
hp: pc -> nat -> type.
action: type.
punch: action.
kick: action.
block_punch: action.
block_kick: action.
act: pc -> action -> type.
punch_hit: Pi HP: nat. Pi HP': nat. Pi P1: pc. Pi P2: pc. (act P1 punch * (opp P1 P2 * (hp P2 HP * sub HP (s !(s !(s !z))) HP'))) -o {hp P2 HP'}.
punch_block: Pi P1: pc. Pi P2: pc. (act P1 punch * (opp P1 P2 * act P2 block_punch)) -o {1}.
kick_hit: Pi HP: nat. Pi HP': nat. Pi P1: pc. Pi P2: pc. (act P1 kick * (opp P1 P2 * (hp P2 HP * sub HP (s !(s !z)) HP'))) -o {hp P2 HP'}.
kick_block: Pi P1: pc. Pi P2: pc. (act P1 kick * (opp P1 P2 * act P2 block_kick)) -o {1}.
block_punch_fail: Pi P: pc. act P block_punch -o {1}.
block_kick_fail: Pi P: pc. act P block_kick -o {1}.
winner: pc -> type.
none: pc.
gameon: type.
win: Pi N: nat. Pi P1: pc. Pi P2: pc. (gameon * (hp P1 z * (opp P1 P2 * hp P2 (s !N)))) -o {winner P2}.
tie: Pi P1: pc. Pi P2: pc. (gameon * (hp P1 z * (opp P1 P2 * hp P2 z))) -o {winner none}.
player1_act: Pi A: action. gameon -o {act player1 A * gameon}.
player2_act: Pi A: action. gameon -o {act player2 A * gameon}.
init: Type = {hp player1 (s !(s !(s !(s !(s !(s !(s !(s !(s !(s !z)))))))))) * (hp player2 (s !(s !(s !(s !(s !(s !(s !(s !(s !(s !z)))))))))) * gameon)}.
Trace * init
-- init lin
-- hp player1 (s !(s !(s !(s !(s !(s !(s !(s !(s !(s !z)))))))))) lin, 
   hp player2 (s !(s !(s !(s !(s !(s !(s !(s !(s !(s !z)))))))))) lin, 
   gameon lin
-- hp player1 (s !(s !(s !(s !(s !(s !(s !(s !(s !(s !z)))))))))) lin, 
   hp player2 (s !(s !(s !(s !(s !(s !(s !(s !(s !(s !z)))))))))) lin, 
   act player1 $72[^4] lin, gameon lin
-- hp player1 (s !(s !(s !(s !(s !(s !(s !(s !(s !(s !z)))))))))) lin, 
   hp player2 (s !(s !(s !(s !(s !(s !(s !(s !(s !(s !z)))))))))) lin, 
   gameon lin
-- hp player1 (s !(s !(s !(s !(s !(s !(s !(s !(s !(s !z)))))))))) lin, 
   hp player2 (s !(s !(s !(s !(s !(s !(s !(s !(s !(s !z)))))))))) lin, 
   act player1 $8E[^6] lin, gameon lin
-- hp player1 (s !(s !(s !(s !(s !(s !(s !(s !(s !(s !z)))))))))) lin, 
   hp player2 (s !(s !(s !(s !(s !(s !(s !(s !(s !(s !z)))))))))) lin, 
   act player1 $8E[^6] lin, act player2 $9A[^8] lin, gameon lin
-- hp player1 (s !(s !(s !(s !(s !(s !(s !(s !(s !(s !z)))))))))) lin, 
   hp player2 (s !(s !(s !(s !(s !(s !(s !(s !(s !(s !z)))))))))) lin, 
   act player1 $8E[^6] lin, act player2 $9A[^8] lin, act player2 $9C[^10] lin, 
   gameon lin
-- hp player1 (s !(s !(s !(s !(s !(s !(s !(s !(s !(s !z)))))))))) lin, 
   hp player2 (s !(s !(s !(s !(s !(s !(s !(s !(s !(s !z)))))))))) lin, 
   act player1 $8E[^6] lin, act player2 $9C[^10] lin, gameon lin
-- hp player2 (s !(s !(s !(s !(s !(s !(s !(s !(s !(s !z)))))))))) lin, 
   act player1 $8E[^6] lin, gameon lin, 
   hp player1 (s !(s !(s !(s !(s !(s !(s !z))))))) lin
-- hp player2 (s !(s !(s !(s !(s !(s !(s !(s !(s !(s !z)))))))))) lin, 
   gameon lin, hp player1 (s !(s !(s !(s !(s !(s !(s !z))))))) lin
-- hp player2 (s !(s !(s !(s !(s !(s !(s !(s !(s !(s !z)))))))))) lin, 
   hp player1 (s !(s !(s !(s !(s !(s !(s !z))))))) lin, 
   act player2 $D4[^13] lin, gameon lin
-- hp player2 (s !(s !(s !(s !(s !(s !(s !(s !(s !(s !z)))))))))) lin, 
   gameon lin, hp player1 (s !(s !(s !(s !(s !z))))) lin
-- hp player2 (s !(s !(s !(s !(s !(s !(s !(s !(s !(s !z)))))))))) lin, 
   hp player1 (s !(s !(s !(s !(s !z))))) lin, act player2 $FA[^16] lin, 
   gameon lin
-- hp player2 (s !(s !(s !(s !(s !(s !(s !(s !(s !(s !z)))))))))) lin, 
   hp player1 (s !(s !(s !(s !(s !z))))) lin, gameon lin
-- hp player2 (s !(s !(s !(s !(s !(s !(s !(s !(s !(s !z)))))))))) lin, 
   hp player1 (s !(s !(s !(s !(s !z))))) lin, act player2 $110[^18] lin, 
   gameon lin
-- hp player2 (s !(s !(s !(s !(s !(s !(s !(s !(s !(s !z)))))))))) lin, 
   gameon lin, hp player1 (s !(s !z)) lin
-- hp player2 (s !(s !(s !(s !(s !(s !(s !(s !(s !(s !z)))))))))) lin, 
   hp player1 (s !(s !z)) lin, act player2 $14E[^21] lin, gameon lin
-- hp player2 (s !(s !(s !(s !(s !(s !(s !(s !(s !(s !z)))))))))) lin, 
   hp player1 (s !(s !z)) lin, gameon lin
-- hp player2 (s !(s !(s !(s !(s !(s !(s !(s !(s !(s !z)))))))))) lin, 
   hp player1 (s !(s !z)) lin, act player2 $15A[^23] lin, gameon lin
-- hp player2 (s !(s !(s !(s !(s !(s !(s !(s !(s !(s !z)))))))))) lin, 
   gameon lin, hp player1 z lin
-- winner player2 lin
Success: 20 steps
Query (*, *, *, 5) init -o {winner #P}.
Iteration 1
Solution: \X1. {
    let {[X2, [X3, X4]]} = X1 in 
    let {[X5, X6]} = player2_act X4 in 
    let {1} = block_kick_fail X5 in 
    let {[X7, X8]} = player2_act X6 in 
    let {[X9, X10]} = player1_act X8 in 
    let {X11} = kick_hit [X7, [-1, [X2, sub/s !(sub/s !sub/z2)]]] in 
    let {[X12, X13]} = player1_act X10 in 
    let {[X14, X15]} = player1_act X13 in 
    let {X16} = punch_hit [X12, [-, [X3, sub/s !(sub/s !(sub/s !sub/z2))]]] in 
    let {X17} = punch_hit [X14, [-, [X16, sub/s !(sub/s !(sub/s !sub/z2))]]] in 
    let {[X18, X19]} = player1_act X15 in 
    let {X20} = punch_hit [X9, [-, [X17, sub/s !(sub/s !(sub/s !sub/z2))]]] in 
    let {1} = block_punch_fail X18 in 
    let {[X21, X22]} = player1_act X19 in 
    let {[X23, X24]} = player2_act X22 in 
    let {[X25, X26]} = player1_act X24 in 
    let {1} = punch_block [X25, [-, X23]] in 
    let {X27} = kick_hit [X21, [-, [X20, sub/s !sub/z1]]] in 
    let {[X28, X29]} = player2_act X26 in 
    let {X30} = kick_hit [X28, [-1, [X11, sub/s !(sub/s !sub/z2)]]] in 
    let {[X31, X32]} = player2_act X29 in 
    let {[X33, X34]} = player2_act X32 in 
    let {1} = block_punch_fail X33 in 
    let {1} = block_kick_fail X31 in 
    let {X35} = win [X34, [X27, [-1, X30]]] in X35}
 #P = player1
Iteration 2
Solution: \X1. {
    let {[X2, [X3, X4]]} = X1 in 
    let {[X5, X6]} = player1_act X4 in 
    let {X7} = kick_hit [X5, [-, [X3, sub/s !(sub/s !sub/z2)]]] in 
    let {[X8, X9]} = player2_act X6 in 
    let {[X10, X11]} = player1_act X9 in 
    let {X12} = punch_hit [X10, [-, [X7, sub/s !(sub/s !(sub/s !sub/z2))]]] in 
    let {1} = block_punch_fail X8 in 
    let {[X13, X14]} = player2_act X11 in 
    let {[X15, X16]} = player2_act X14 in 
    let {[X17, X18]} = player2_act X16 in 
    let {X19} = punch_hit [X15, [-1, [X2, sub/s !(sub/s !(sub/s !sub/z2))]]] in 
    let {1} = block_kick_fail X13 in 
    let {1} = block_kick_fail X17 in 
    let {[X20, X21]} = player1_act X18 in 
    let {[X22, X23]} = player1_act X21 in 
    let {[X24, X25]} = player2_act X23 in 
    let {[X26, X27]} = player1_act X25 in 
    let {X28} = punch_hit [X22, [-, [X12, sub/s !(sub/s !(sub/s !sub/z2))]]] in 
    let {[X29, X30]} = player2_act X27 in 
    let {[X31, X32]} = player1_act X30 in 
    let {X33} = kick_hit [X31, [-, [X28, sub/s !(sub/s !sub/z1)]]] in 
    let {1} = punch_block [X26, [-, X29]] in 
    let {[X34, X35]} = player2_act X32 in 
    let {X36} = win [X35, [X33, [-1, X19]]] in 
    let {1} = punch_block [X20, [-, X24]] in 
    let {1} = block_punch_fail X34 in X36}
 #P = player1
Iteration 3
Solution: \X1. {
    let {[X2, [X3, X4]]} = X1 in 
    let {[X5, X6]} = player1_act X4 in 
    let {X7} = punch_hit [X5, [-, [X3, sub/s !(sub/s !(sub/s !sub/z2))]]] in 
    let {[X8, X9]} = player2_act X6 in 
    let {X10} = kick_hit [X8, [-1, [X2, sub/s !(sub/s !sub/z2)]]] in 
    let {[X11, X12]} = player2_act X9 in 
    let {X13} = punch_hit [X11, [-1, [X10, sub/s !(sub/s !(sub/s !sub/z2))]]] in 
    let {[X14, X15]} = player1_act X12 in 
    let {[X16, X17]} = player2_act X15 in 
    let {1} = kick_block [X16, [-1, X14]] in 
    let {[X18, X19]} = player1_act X17 in 
    let {1} = block_kick_fail X18 in 
    let {[X20, X21]} = player1_act X19 in 
    let {X22} = kick_hit [X20, [-, [X7, sub/s !(sub/s !sub/z2)]]] in 
    let {[X23, X24]} = player2_act X21 in 
    let {[X25, X26]} = player1_act X24 in 
    let {X27} = punch_hit [X23, [-1, [X13, sub/s !(sub/s !(sub/s !sub/z2))]]] in 
    let {1} = block_kick_fail X25 in 
    let {[X28, X29]} = player1_act X26 in 
    let {X30} = kick_hit [X28, [-, [X22, sub/s !(sub/s !sub/z2)]]] in 
    let {[X31, X32]} = player1_act X29 in 
    let {1} = block_punch_fail X31 in 
    let {[X33, X34]} = player2_act X32 in 
    let {X35} = punch_hit [X33, [-1, [X27, sub/s !(sub/s !sub/z1)]]] in 
    let {[X36, X37]} = player1_act X34 in 
    let {X38} = punch_hit [X36, [-, [X30, sub/s !(sub/s !(sub/s !sub/z1))]]] in 
    let {[X39, X40]} = player2_act X37 in 
    let {X41} = kick_hit [X39, [-1, [X35, sub/z1]]] in 
    let {X42} = tie [X40, [X38, [-1, X41]]] in X42}
 #P = none
Iteration 4
Solution: \X1. {
    let {[X2, [X3, X4]]} = X1 in 
    let {[X5, X6]} = player2_act X4 in 
    let {1} = block_punch_fail X5 in 
    let {[X7, X8]} = player2_act X6 in 
    let {X9} = kick_hit [X7, [-1, [X2, sub/s !(sub/s !sub/z2)]]] in 
    let {[X10, X11]} = player1_act X8 in 
    let {X12} = kick_hit [X10, [-, [X3, sub/s !(sub/s !sub/z2)]]] in 
    let {[X13, X14]} = player1_act X11 in 
    let {X15} = kick_hit [X13, [-, [X12, sub/s !(sub/s !sub/z2)]]] in 
    let {[X16, X17]} = player2_act X14 in 
    let {1} = block_punch_fail X16 in 
    let {[X18, X19]} = player2_act X17 in 
    let {[X20, X21]} = player1_act X19 in 
    let {1} = kick_block [X18, [-1, X20]] in 
    let {[X22, X23]} = player1_act X21 in 
    let {[X24, X25]} = player2_act X23 in 
    let {[X26, X27]} = player2_act X25 in 
    let {1} = punch_block [X24, [-1, X22]] in 
    let {[X28, X29]} = player1_act X27 in 
    let {1} = kick_block [X26, [-1, X28]] in 
    let {[X30, X31]} = player1_act X29 in 
    let {X32} = kick_hit [X30, [-, [X15, sub/s !(sub/s !sub/z2)]]] in 
    let {[X33, X34]} = player2_act X31 in 
    let {X35} = punch_hit [X33, [-1, [X9, sub/s !(sub/s !(sub/s !sub/z2))]]] in 
    let {[X36, X37]} = player1_act X34 in 
    let {[X38, X39]} = player2_act X37 in 
    let {[X40, X41]} = player2_act X39 in 
    let {X42} = kick_hit [X40, [-1, [X35, sub/s !(sub/s !sub/z2)]]] in 
    let {[X43, X44]} = player1_act X41 in 
    let {1} = punch_block [X38, [-1, X43]] in 
    let {1} = block_punch_fail X36 in 
    let {[X45, X46]} = player1_act X44 in 
    let {[X47, X48]} = player2_act X46 in 
    let {1} = block_punch_fail X47 in 
    let {X49} = punch_hit [X45, [-, [X32, sub/s !(sub/s !(sub/s !sub/z2))]]] in 
    let {[X50, X51]} = player1_act X48 in 
    let {1} = block_punch_fail X50 in 
    let {[X52, X53]} = player2_act X51 in 
    let {X54} = punch_hit [X52, [-1, [X42, sub/s !(sub/s !(sub/s !sub/z2))]]] in 
    let {[X55, X56]} = player2_act X53 in 
    let {X57} = punch_hit [X55, [-1, [X54, sub/z1]]] in 
    let {X58} = win [X56, [X57, [-, X49]]] in X58}
 #P = player2
Iteration 5
Solution: \X1. {
    let {[X2, [X3, X4]]} = X1 in 
    let {[X5, X6]} = player1_act X4 in 
    let {[X7, X8]} = player2_act X6 in 
    let {X9} = punch_hit [X7, [-1, [X2, sub/s !(sub/s !(sub/s !sub/z2))]]] in 
    let {1} = block_kick_fail X5 in 
    let {[X10, X11]} = player2_act X8 in 
    let {[X12, X13]} = player1_act X11 in 
    let {[X14, X15]} = player2_act X13 in 
    let {X16} = punch_hit [X14, [-1, [X9, sub/s !(sub/s !(sub/s !sub/z2))]]] in 
    let {1} = block_punch_fail X12 in 
    let {X17} = punch_hit [X10, [-1, [X16, sub/s !(sub/s !(sub/s !sub/z2))]]] in 
    let {[X18, X19]} = player2_act X15 in 
    let {1} = block_kick_fail X18 in 
    let {[X20, X21]} = player1_act X19 in 
    let {1} = block_kick_fail X20 in 
    let {[X22, X23]} = player2_act X21 in 
    let {1} = block_punch_fail X22 in 
    let {[X24, X25]} = player2_act X23 in 
    let {1} = block_punch_fail X24 in 
    let {[X26, X27]} = player1_act X25 in 
    let {X28} = punch_hit [X26, [-, [X3, sub/s !(sub/s !(sub/s !sub/z2))]]] in 
    let {[X29, X30]} = player1_act X27 in 
    let {1} = block_punch_fail X29 in 
    let {[X31, X32]} = player2_act X30 in 
    let {1} = block_punch_fail X31 in 
    let {[X33, X34]} = player2_act X32 in 
    let {[X35, X36]} = player2_act X34 in 
    let {X37} = punch_hit [X33, [-1, [X17, sub/s !sub/z1]]] in 
    let {1} = block_kick_fail X35 in 
    let {X38} = win [X36, [X37, [-, X28]]] in X38}
 #P = player2
[closing combat.clf]
